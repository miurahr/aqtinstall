[project]
name = "aqtinstall"
description = "Another unofficial Qt installer"
readme = "README.rst"
license = {file = "LICENSE"}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: C++",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
]
requires-python = ">=3.6"
dependencies = [
    "requests",
    "semantic_version",
    "patch>=1.16",
    "py7zr>=0.18.3",
    "texttable",
    "bs4",
    "dataclasses;python_version<'3.7'",
    "defusedxml",
]
dynamic = ["version"]

[project.scripts]
aqt = "aqt.__main__:main"

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-pep8",
    "pytest-remotedata",
    "pytest-cov",
    "pytest-socket",
    "pytest-leaks",
    "pympler",
]
check = [
    "flake8",
    "flake8-black",
    "flake8-colors",
    "flake8-isort",
    "flake8-pyi",
    "flake8-typing-imports",
    "docutils",
    "check-manifest",
    "readme-renderer",
    "pygments",
    "packaging",
]
docs = [
    "sphinx>=2.3",
    "sphinx_rtd_theme",
    "sphinx-py3doc-enhanced-theme",
]

[project.urls]
Documentation = "https://aqtinstall.readthedocs.io/"
Bug_Tracker = "https://github.com/miurahr/aqtinstall/issues"
Wiki = "https://github.com/miurahr/aqtinstall/wiki"
Source = "https://github.com/miurahr/aqtinstall"
Changelog = "https://github.com/miurahr/aqtinstall/blob/master/CHANGELOG.rst"

[tool.poetry]
include = ["*.yml", "*.json", "*.ini"]

[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm[toml]>=6.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "aqt/version.py"
write_to_template = """
__version__ = \"{version}\"
"""
tag_regex = "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"

[tool.check-manifest]
ignore = ["aqt/version.py","azure-pipelines.yml", ".readthedocs.yml", "ci/*"]

[tool.coverage.run]
branch = true
parallel = true
source = ["aqt", "tests"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]

[tool.black]
line-length = 125
target-version = ['py38']

[tool.isort]
line_length = 125
known_first_party = "aqt"
known_third_party = ["docutils", "flake8", "pyannotate_runtime", "pytest", "pytz", "requests", "setuptools", "sphinx", "yaml", "packaging"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = check, docs, py{36,37,38,39,310}, py39d, mprof, fil

[testenv]
passenv =
    GITHUB_*
    APPVEYOR APPVEYOR_*
    TRAVIS TRAVIS_*
    COVERALLS_*
    PYTEST_ADDOPTS
extras = test, check, docs
commands =
    python -m pytest -vv

[testenv:check]
basepython = python3.8
extras = check
commands =
    check-manifest {toxinidir}
    flake8 aqt tests setup.py

[testenv:docs]
basepython = python3.8
extras = docs
commands =
    sphinx-build {posargs:-E} -W -b html docs build/docs
    sphinx-build -W -b linkcheck docs build/docs

[testenv:py39d]
basepython = python3.9d
extras = test
commands =
    python3.9-dbg -m pytest -v --no-cov -R : -k "test_install"
deps =
    pytest
    pytest-leaks
    pytest-remotedata
    pytest-socket
    pytest-cov

[testenv:mprof]
basepython = python3.8
commands =
    mprof run --multiprocess python -m aqt install-qt -O /tmp -d /tmp linux desktop 6.2.1
    mprof plot --output memory-profile.png
deps =
    memory_profiler
    matplotlib

[testenv:fil]
basepython = python3.8
commands =
    fil-profile run -m aqt install-qt -O /tmp -d /tmp linux desktop 6.2.1
deps =
    filprofiler

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[gh-actions]
python =
    3.6: py36
    3.8: py38, docs, check
    3.9: py39
    3.10: py310
"""
